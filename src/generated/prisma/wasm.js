
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.1
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.1",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  role: 'role',
  department: 'department',
  avatar: 'avatar',
  passwordHash: 'passwordHash',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.DepartmentScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.TeamScalarFieldEnum = {
  id: 'id',
  name: 'name',
  departmentId: 'departmentId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InitiativeScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  ownerId: 'ownerId',
  goalJson: 'goalJson',
  roiJson: 'roiJson',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CategoryScalarFieldEnum = {
  id: 'id',
  name: 'name',
  createdAt: 'createdAt'
};

exports.Prisma.SignalScalarFieldEnum = {
  id: 'id',
  inputId: 'inputId',
  timestamp: 'timestamp',
  receivedAt: 'receivedAt',
  schemaVersion: 'schemaVersion',
  sourceJson: 'sourceJson',
  confidence: 'confidence',
  attachmentsJson: 'attachmentsJson',
  sourceType: 'sourceType',
  sourceId: 'sourceId',
  systemName: 'systemName',
  title: 'title',
  description: 'description',
  severity: 'severity',
  severityScore: 'severityScore',
  departmentId: 'departmentId',
  teamId: 'teamId',
  metricsJson: 'metricsJson',
  baselineJson: 'baselineJson',
  impactJson: 'impactJson',
  tagsJson: 'tagsJson',
  entitiesJson: 'entitiesJson',
  privacyLevel: 'privacyLevel',
  dedupeKey: 'dedupeKey',
  embedding: 'embedding',
  aiProcessed: 'aiProcessed',
  aiTagsJson: 'aiTagsJson',
  lineageJson: 'lineageJson',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HotspotScalarFieldEnum = {
  id: 'id',
  title: 'title',
  summary: 'summary',
  status: 'status',
  rankScore: 'rankScore',
  confidence: 'confidence',
  primaryCategoryId: 'primaryCategoryId',
  linkedEntitiesJson: 'linkedEntitiesJson',
  clusteringMethod: 'clusteringMethod',
  similarityThreshold: 'similarityThreshold',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.HotspotSignalScalarFieldEnum = {
  hotspotId: 'hotspotId',
  signalId: 'signalId',
  membershipStrength: 'membershipStrength',
  isOutlier: 'isOutlier',
  addedAt: 'addedAt'
};

exports.Prisma.IdeaScalarFieldEnum = {
  id: 'id',
  hotspotId: 'hotspotId',
  title: 'title',
  description: 'description',
  origin: 'origin',
  votes: 'votes',
  status: 'status',
  evidenceJson: 'evidenceJson',
  tagsJson: 'tagsJson',
  confidence: 'confidence',
  createdById: 'createdById',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.InputScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  type: 'type',
  department: 'department',
  issueType: 'issueType',
  rootCause: 'rootCause',
  priority: 'priority',
  aiTags: 'aiTags',
  aiConfidence: 'aiConfidence',
  aiSuggestions: 'aiSuggestions',
  status: 'status',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SolutionScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  status: 'status',
  hotspotId: 'hotspotId',
  initiativeId: 'initiativeId',
  ideaId: 'ideaId',
  tasks: 'tasks',
  progress: 'progress',
  targetDate: 'targetDate',
  actualCompletionDate: 'actualCompletionDate',
  estimatedEffort: 'estimatedEffort',
  businessValue: 'businessValue',
  successMetrics: 'successMetrics',
  expectedImpactJson: 'expectedImpactJson',
  actualImpactJson: 'actualImpactJson',
  inputId: 'inputId',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RequirementScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  acceptanceCriteria: 'acceptanceCriteria',
  priority: 'priority',
  status: 'status',
  estimatedEffort: 'estimatedEffort',
  dependencies: 'dependencies',
  businessValue: 'businessValue',
  riskAssessment: 'riskAssessment',
  stakeholders: 'stakeholders',
  approvedBy: 'approvedBy',
  approvedAt: 'approvedAt',
  rejectionReason: 'rejectionReason',
  solutionId: 'solutionId',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.FRDDocumentScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  aiGenerated: 'aiGenerated',
  aiConfidence: 'aiConfidence',
  aiPromptUsed: 'aiPromptUsed',
  version: 'version',
  status: 'status',
  executiveApproved: 'executiveApproved',
  exportFormats: 'exportFormats',
  templateUsed: 'templateUsed',
  generationTime: 'generationTime',
  wordCount: 'wordCount',
  lastExportedAt: 'lastExportedAt',
  solutionId: 'solutionId',
  createdBy: 'createdBy',
  approvedBy: 'approvedBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  content: 'content',
  entityType: 'entityType',
  entityId: 'entityId',
  parentId: 'parentId',
  mentions: 'mentions',
  edited: 'edited',
  editedAt: 'editedAt',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.VoteScalarFieldEnum = {
  id: 'id',
  value: 'value',
  entityType: 'entityType',
  entityId: 'entityId',
  createdBy: 'createdBy',
  createdAt: 'createdAt'
};

exports.Prisma.InputGroupScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  color: 'color',
  aiSuggested: 'aiSuggested',
  aiConfidence: 'aiConfidence',
  aiReasoning: 'aiReasoning',
  inputCount: 'inputCount',
  avgPriority: 'avgPriority',
  lastActivity: 'lastActivity',
  createdBy: 'createdBy',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.AuditLogScalarFieldEnum = {
  id: 'id',
  action: 'action',
  entityType: 'entityType',
  entityId: 'entityId',
  changes: 'changes',
  ipAddress: 'ipAddress',
  userAgent: 'userAgent',
  sessionId: 'sessionId',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.NotificationScalarFieldEnum = {
  id: 'id',
  type: 'type',
  title: 'title',
  message: 'message',
  entityType: 'entityType',
  entityId: 'entityId',
  read: 'read',
  readAt: 'readAt',
  delivered: 'delivered',
  userId: 'userId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.JsonNullValueInput = {
  JsonNull: Prisma.JsonNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  EXECUTIVE: 'EXECUTIVE',
  CONTRIBUTOR: 'CONTRIBUTOR'
};

exports.InputType = exports.$Enums.InputType = {
  PROBLEM: 'PROBLEM',
  OPPORTUNITY: 'OPPORTUNITY',
  GENERAL: 'GENERAL'
};

exports.Priority = exports.$Enums.Priority = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.InputStatus = exports.$Enums.InputStatus = {
  ACTIVE: 'ACTIVE',
  RESOLVED: 'RESOLVED',
  ARCHIVED: 'ARCHIVED',
  DUPLICATE: 'DUPLICATE'
};

exports.SolutionStatus = exports.$Enums.SolutionStatus = {
  DRAFT: 'DRAFT',
  IN_PROGRESS: 'IN_PROGRESS',
  REVIEW: 'REVIEW',
  APPROVED: 'APPROVED',
  IMPLEMENTED: 'IMPLEMENTED',
  CANCELLED: 'CANCELLED',
  ON_HOLD: 'ON_HOLD'
};

exports.RequirementStatus = exports.$Enums.RequirementStatus = {
  DRAFT: 'DRAFT',
  REVIEW: 'REVIEW',
  APPROVED: 'APPROVED',
  REJECTED: 'REJECTED',
  IMPLEMENTED: 'IMPLEMENTED',
  OBSOLETE: 'OBSOLETE'
};

exports.FRDStatus = exports.$Enums.FRDStatus = {
  DRAFT: 'DRAFT',
  REVIEW: 'REVIEW',
  APPROVED: 'APPROVED',
  DELIVERED: 'DELIVERED',
  ARCHIVED: 'ARCHIVED'
};

exports.EntityType = exports.$Enums.EntityType = {
  INPUT: 'INPUT',
  SIGNAL: 'SIGNAL',
  HOTSPOT: 'HOTSPOT',
  IDEA: 'IDEA',
  SOLUTION: 'SOLUTION',
  REQUIREMENT: 'REQUIREMENT',
  FRD_DOCUMENT: 'FRD_DOCUMENT'
};

exports.VoteValue = exports.$Enums.VoteValue = {
  UP: 'UP',
  DOWN: 'DOWN'
};

exports.NotificationType = exports.$Enums.NotificationType = {
  MENTION: 'MENTION',
  VOTE: 'VOTE',
  COMMENT: 'COMMENT',
  STATUS_CHANGE: 'STATUS_CHANGE',
  APPROVAL_REQUEST: 'APPROVAL_REQUEST',
  ASSIGNMENT: 'ASSIGNMENT',
  DEADLINE_REMINDER: 'DEADLINE_REMINDER'
};

exports.Severity = exports.$Enums.Severity = {
  LOW: 'LOW',
  MEDIUM: 'MEDIUM',
  HIGH: 'HIGH',
  CRITICAL: 'CRITICAL'
};

exports.HotspotStatus = exports.$Enums.HotspotStatus = {
  OPEN: 'OPEN',
  APPROVED: 'APPROVED',
  HANDED_OFF: 'HANDED_OFF',
  MONITORING: 'MONITORING',
  RESOLVED: 'RESOLVED',
  CLOSED_NO_ACTION: 'CLOSED_NO_ACTION'
};

exports.Prisma.ModelName = {
  User: 'User',
  Department: 'Department',
  Team: 'Team',
  Initiative: 'Initiative',
  Category: 'Category',
  Signal: 'Signal',
  Hotspot: 'Hotspot',
  HotspotSignal: 'HotspotSignal',
  Idea: 'Idea',
  Input: 'Input',
  Solution: 'Solution',
  Requirement: 'Requirement',
  FRDDocument: 'FRDDocument',
  Comment: 'Comment',
  Vote: 'Vote',
  InputGroup: 'InputGroup',
  AuditLog: 'AuditLog',
  Notification: 'Notification'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/scottgarretson/Development/Fieldstone/FAEVision/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      },
      {
        "fromEnvVar": null,
        "value": "rhel-openssl-3.0.x"
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/scottgarretson/Development/Fieldstone/FAEVision/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.1",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// FAEVision MVP Database Schema v1.0\n// Database Architect: Morgan Smith\n// Complete schema supporting F1-F6 features\n\ngenerator client {\n  provider      = \"prisma-client-js\"\n  output        = \"../src/generated/prisma\"\n  binaryTargets = [\"native\", \"rhel-openssl-3.0.x\"]\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ============================================================================\n// USER MANAGEMENT & AUTHENTICATION\n// ============================================================================\n\nmodel User {\n  id           String   @id @default(cuid())\n  email        String   @unique\n  name         String\n  role         UserRole @default(CONTRIBUTOR)\n  department   String?\n  avatar       String?\n  passwordHash String? // For credentials authentication\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relationships for all F1-F6 features + V2 enhancements\n  inputs       Input[]\n  signals      Signal[] // V2: Enhanced signal model\n  initiatives  Initiative[] // V2: Strategic initiatives\n  ideas        Idea[] // V2: Ideas from hotspots\n  solutions    Solution[]\n  comments     Comment[]\n  votes        Vote[]\n  requirements Requirement[]\n  frdDocuments FRDDocument[] @relation(\"FRDCreator\")\n  approvedFRDs FRDDocument[] @relation(\"FRDApprover\")\n  auditLogs    AuditLog[]\n  inputGroups  InputGroup[]\n\n  @@map(\"users\")\n}\n\n// ============================================================================\n// ORGANIZATIONAL STRUCTURE (V2 Enhancement)\n// ============================================================================\n\nmodel Department {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  teams     Team[]\n  signals   Signal[]\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"departments\")\n}\n\nmodel Team {\n  id           String      @id @default(cuid())\n  name         String\n  departmentId String?\n  department   Department? @relation(fields: [departmentId], references: [id])\n  signals      Signal[]\n  createdAt    DateTime    @default(now())\n  updatedAt    DateTime    @updatedAt\n\n  @@map(\"teams\")\n}\n\nmodel Initiative {\n  id          String     @id @default(cuid())\n  name        String     @unique\n  description String?    @db.Text\n  ownerId     String?\n  owner       User?      @relation(fields: [ownerId], references: [id])\n  goalJson    Json? // Strategic goals and metrics\n  roiJson     Json? // ROI tracking data\n  solutions   Solution[]\n  createdAt   DateTime   @default(now())\n  updatedAt   DateTime   @updatedAt\n\n  @@map(\"initiatives\")\n}\n\nmodel Category {\n  id        String   @id @default(cuid())\n  name      String   @unique\n  createdAt DateTime @default(now())\n\n  @@map(\"categories\")\n}\n\n// ============================================================================\n// ENHANCED SIGNAL MODEL (PHQ Vision Standard Compliant)\n// ============================================================================\n\nmodel Signal {\n  id         String   @id @default(cuid())\n  inputId    String   @unique // External reference ID\n  timestamp  DateTime // Original signal time\n  receivedAt DateTime @default(now())\n\n  // PHQ Vision Standard Compliance Fields\n  schemaVersion   String @default(\"1.0\")\n  sourceJson      Json? // Full PHQ source object structure\n  confidence      Float? // AI reliability scoring 0.0-1.0\n  attachmentsJson Json? // Media/file attachments array\n\n  // Source Information\n  sourceType String // webhook|email|manual|system\n  sourceId   String? // External system ID\n  systemName String? // Source system name\n\n  // Core Content\n  title         String?\n  description   String // Main signal content\n  severity      Severity\n  severityScore Int      @default(0)\n\n  // Organizational Context\n  departmentId String?\n  teamId       String?\n  department   Department? @relation(fields: [departmentId], references: [id])\n  team         Team?       @relation(fields: [teamId], references: [id])\n\n  // Structured Data (PHQ Standard)\n  metricsJson  Json? // Quantitative metrics\n  baselineJson Json? // Baseline comparisons\n  impactJson   Json? // Impact assessment\n  tagsJson     Json? // Structured and freeform tags\n  entitiesJson Json? // Related entities (vendors, clients, etc.)\n\n  // Privacy & Security\n  privacyLevel String? // public|internal|sensitive\n  dedupeKey    String? @unique // Deduplication identifier\n\n  // AI Processing\n  embedding   Bytes? // Vector embedding (OpenAI)\n  aiProcessed Boolean @default(false)\n  aiTagsJson  Json? // AI-generated tags and confidence\n\n  // Lineage & Collaboration\n  lineageJson Json? // Processing history\n  createdById String?\n  createdBy   User?   @relation(fields: [createdById], references: [id])\n\n  // Relationships\n  hotspots HotspotSignal[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([timestamp])\n  @@index([receivedAt])\n  @@index([sourceType])\n  @@index([severity])\n  @@index([departmentId])\n  @@index([teamId])\n  @@index([aiProcessed])\n  @@index([createdById])\n  @@map(\"signals\")\n}\n\n// ============================================================================\n// CLUSTERING & HOTSPOTS (V2 Core Feature)\n// ============================================================================\n\nmodel Hotspot {\n  id         String        @id @default(cuid())\n  title      String\n  summary    String        @db.Text\n  status     HotspotStatus @default(OPEN)\n  rankScore  Float         @default(0)\n  confidence Float         @default(0)\n\n  // Categorization\n  primaryCategoryId  String?\n  linkedEntitiesJson Json? // Key entities across signals\n\n  // AI Analysis\n  clusteringMethod    String? // HDBSCAN|manual|hybrid\n  similarityThreshold Float? // Clustering threshold used\n\n  // Relationships\n  signals   HotspotSignal[]\n  ideas     Idea[]\n  solutions Solution[]\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([status])\n  @@index([rankScore])\n  @@index([confidence])\n  @@index([primaryCategoryId])\n  @@map(\"hotspots\")\n}\n\n// Many-to-Many with Strength\nmodel HotspotSignal {\n  hotspotId          String\n  signalId           String\n  membershipStrength Float    @default(1.0) // 0.0-1.0 confidence\n  isOutlier          Boolean  @default(false) // <0.5 strength\n  addedAt            DateTime @default(now())\n\n  hotspot Hotspot @relation(fields: [hotspotId], references: [id], onDelete: Cascade)\n  signal  Signal  @relation(fields: [signalId], references: [id], onDelete: Cascade)\n\n  @@id([hotspotId, signalId])\n  @@map(\"hotspot_signals\")\n}\n\n// ============================================================================\n// IDEAS & ENHANCED SOLUTIONS (V2 Workflow)\n// ============================================================================\n\nmodel Idea {\n  id          String  @id @default(cuid())\n  hotspotId   String\n  title       String?\n  description String  @db.Text\n  origin      String // ai|human|hybrid\n  votes       Int     @default(0)\n  status      String  @default(\"draft\")\n\n  // Evidence & Context\n  evidenceJson Json? // Linked signals and reasoning\n  tagsJson     Json? // Categorization tags\n  confidence   Float? // AI confidence if generated\n\n  // Collaboration\n  createdById String?\n  createdBy   User?   @relation(fields: [createdById], references: [id])\n\n  // Note: Comments and votes use polymorphic relations via EntityType.IDEA\n\n  // Relationships\n  hotspot  Hotspot   @relation(fields: [hotspotId], references: [id])\n  solution Solution? // If promoted\n\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@index([hotspotId])\n  @@index([origin])\n  @@index([status])\n  @@index([createdById])\n  @@map(\"ideas\")\n}\n\n// ============================================================================\n// F1: INPUT CAPTURE & STRATEGIC TAGGING (Legacy - Deprecated)\n// ============================================================================\n\nmodel Input {\n  id          String    @id @default(cuid())\n  title       String\n  description String    @db.Text\n  type        InputType @default(GENERAL)\n\n  // Strategic Tagging (F1 Core Feature)\n  department String?\n  issueType  String?\n  rootCause  String?\n  priority   Priority @default(MEDIUM)\n\n  // AI Enhancement Fields\n  aiTags        Json? // AI-suggested strategic tags\n  aiConfidence  Float? // AI confidence score (0-1)\n  aiSuggestions Json? // Additional AI insights\n\n  // Status and Metadata\n  status    InputStatus @default(ACTIVE)\n  createdBy String\n  createdAt DateTime    @default(now())\n  updatedAt DateTime    @updatedAt\n\n  // Relationships\n  creator   User         @relation(fields: [createdBy], references: [id])\n  solutions Solution[]\n  groups    InputGroup[]\n\n  @@index([createdBy])\n  @@index([department])\n  @@index([priority])\n  @@index([status])\n  @@index([createdAt])\n  @@map(\"inputs\")\n}\n\n// ============================================================================\n// F4: SOLUTION EXECUTION & MANAGEMENT\n// ============================================================================\n\nmodel Solution {\n  id          String         @id @default(cuid())\n  title       String\n  description String         @db.Text\n  status      SolutionStatus @default(DRAFT)\n\n  // V2: Enhanced relationships\n  hotspotId    String?\n  initiativeId String?\n  ideaId       String? @unique // If promoted from idea\n\n  // Task Management (F4 Core Feature)\n  tasks                Json? // Task breakdown structure\n  progress             Float     @default(0.0) // 0.0 to 1.0 progress\n  targetDate           DateTime?\n  actualCompletionDate DateTime?\n\n  // Business Impact Tracking\n  estimatedEffort    String?\n  businessValue      String?\n  successMetrics     Json? // Key success indicators\n  expectedImpactJson Json? // ROI projections, metrics\n  actualImpactJson   Json? // Measured outcomes\n\n  // Relationships (Enhanced for V2)\n  inputId   String? // Made optional for V2 compatibility\n  createdBy String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // V2 Enhanced Relationships\n  hotspot    Hotspot?    @relation(fields: [hotspotId], references: [id])\n  initiative Initiative? @relation(fields: [initiativeId], references: [id])\n  idea       Idea?       @relation(fields: [ideaId], references: [id])\n\n  // Legacy relationships (maintained for backward compatibility)\n  input        Input?        @relation(fields: [inputId], references: [id])\n  creator      User          @relation(fields: [createdBy], references: [id])\n  requirements Requirement[]\n  frdDocuments FRDDocument[]\n\n  @@index([inputId])\n  @@index([createdBy])\n  @@index([status])\n  @@index([targetDate])\n  @@map(\"solutions\")\n}\n\n// ============================================================================\n// F5: EXECUTIVE REQUIREMENTS MANAGEMENT\n// ============================================================================\n\nmodel Requirement {\n  id                 String            @id @default(cuid())\n  title              String\n  description        String            @db.Text\n  acceptanceCriteria Json // Array of acceptance criteria\n  priority           Priority          @default(MEDIUM)\n  status             RequirementStatus @default(DRAFT)\n\n  // Executive Requirements (F5 Core Feature)\n  estimatedEffort String?\n  dependencies    Json? // Array of requirement dependencies\n  businessValue   String?\n  riskAssessment  String?\n  stakeholders    Json? // Involved stakeholders\n\n  // Approval Workflow\n  approvedBy      String?\n  approvedAt      DateTime?\n  rejectionReason String?\n\n  // Relationships\n  solutionId String\n  createdBy  String\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  solution Solution @relation(fields: [solutionId], references: [id])\n  creator  User     @relation(fields: [createdBy], references: [id])\n\n  @@index([solutionId])\n  @@index([createdBy])\n  @@index([status])\n  @@index([priority])\n  @@map(\"requirements\")\n}\n\n// ============================================================================\n// F6: AI-GENERATED FRD HANDOFF DOCUMENTS\n// ============================================================================\n\nmodel FRDDocument {\n  id           String  @id @default(cuid())\n  title        String\n  content      Json // Complete FRD structure\n  aiGenerated  Boolean @default(false)\n  aiConfidence Float?\n  aiPromptUsed String? @db.Text\n\n  // Document Management (F6 Core Feature)\n  version           String    @default(\"1.0\")\n  status            FRDStatus @default(DRAFT)\n  executiveApproved Boolean   @default(false)\n  exportFormats     Json? // Available export formats [\"PDF\", \"CSV\", \"Word\"]\n\n  // Document Metadata\n  templateUsed   String?\n  generationTime Float? // Time taken to generate (seconds)\n  wordCount      Int?\n  lastExportedAt DateTime?\n\n  // Relationships\n  solutionId String\n  createdBy  String\n  approvedBy String?\n  createdAt  DateTime @default(now())\n  updatedAt  DateTime @updatedAt\n\n  solution Solution @relation(fields: [solutionId], references: [id])\n  creator  User     @relation(\"FRDCreator\", fields: [createdBy], references: [id])\n  approver User?    @relation(\"FRDApprover\", fields: [approvedBy], references: [id])\n\n  @@index([solutionId])\n  @@index([createdBy])\n  @@index([status])\n  @@index([aiGenerated])\n  @@map(\"frd_documents\")\n}\n\n// ============================================================================\n// F2: COLLABORATION FEATURES (Polymorphic Comments and Votes)\n// ============================================================================\n\nmodel Comment {\n  id         String     @id @default(cuid())\n  content    String     @db.Text\n  entityType EntityType // Polymorphic relationship\n  entityId   String\n\n  // Comment Threading Support\n  parentId String?\n  thread   Comment?  @relation(\"CommentThread\", fields: [parentId], references: [id])\n  replies  Comment[] @relation(\"CommentThread\")\n\n  // Mentions and Notifications\n  mentions Json? // Array of mentioned user IDs\n  edited   Boolean   @default(false)\n  editedAt DateTime?\n\n  // Metadata\n  createdBy String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  creator User @relation(fields: [createdBy], references: [id])\n\n  @@index([entityType, entityId])\n  @@index([createdBy])\n  @@index([parentId])\n  @@index([createdAt])\n  @@map(\"comments\")\n}\n\nmodel Vote {\n  id         String     @id @default(cuid())\n  value      VoteValue // UP, DOWN\n  entityType EntityType // Polymorphic relationship\n  entityId   String\n\n  // Metadata\n  createdBy String\n  createdAt DateTime @default(now())\n\n  // Relationships\n  creator User @relation(fields: [createdBy], references: [id])\n\n  @@unique([entityType, entityId, createdBy])\n  @@index([entityType, entityId])\n  @@index([createdBy])\n  @@map(\"votes\")\n}\n\n// ============================================================================\n// F3: INTELLIGENT ORGANIZATION\n// ============================================================================\n\nmodel InputGroup {\n  id          String  @id @default(cuid())\n  name        String\n  description String? @db.Text\n  color       String? // Hex color for visual organization\n\n  // AI Enhancement (F3 Core Feature)\n  aiSuggested  Boolean @default(false)\n  aiConfidence Float?\n  aiReasoning  String? @db.Text\n\n  // Group Analytics\n  inputCount   Int       @default(0)\n  avgPriority  Float?\n  lastActivity DateTime?\n\n  // Metadata\n  createdBy String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  // Relationships\n  creator User    @relation(fields: [createdBy], references: [id])\n  inputs  Input[]\n\n  @@index([createdBy])\n  @@index([aiSuggested])\n  @@index([lastActivity])\n  @@map(\"input_groups\")\n}\n\n// ============================================================================\n// SYSTEM MANAGEMENT & AUDITING\n// ============================================================================\n\nmodel AuditLog {\n  id         String @id @default(cuid())\n  action     String // CREATE, UPDATE, DELETE, APPROVE, REJECT, etc.\n  entityType String // input, solution, requirement, etc.\n  entityId   String\n  changes    Json? // What was changed (before/after)\n\n  // Context Information\n  ipAddress String?\n  userAgent String? @db.Text\n  sessionId String?\n\n  // Metadata\n  userId    String\n  createdAt DateTime @default(now())\n\n  // Relationships\n  user User @relation(fields: [userId], references: [id])\n\n  @@index([userId])\n  @@index([entityType, entityId])\n  @@index([action])\n  @@index([createdAt])\n  @@map(\"audit_logs\")\n}\n\n// ============================================================================\n// NOTIFICATION SYSTEM\n// ============================================================================\n\nmodel Notification {\n  id         String           @id @default(cuid())\n  type       NotificationType\n  title      String\n  message    String           @db.Text\n  entityType EntityType?\n  entityId   String?\n\n  // Notification Status\n  read      Boolean   @default(false)\n  readAt    DateTime?\n  delivered Boolean   @default(false)\n\n  // Target User\n  userId    String\n  createdAt DateTime @default(now())\n\n  @@index([userId, read])\n  @@index([createdAt])\n  @@index([type])\n  @@map(\"notifications\")\n}\n\n// ============================================================================\n// ENUMS\n// ============================================================================\n\nenum UserRole {\n  ADMIN\n  EXECUTIVE\n  CONTRIBUTOR\n}\n\nenum InputType {\n  PROBLEM\n  OPPORTUNITY\n  GENERAL\n}\n\nenum Priority {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum InputStatus {\n  ACTIVE\n  RESOLVED\n  ARCHIVED\n  DUPLICATE\n}\n\nenum SolutionStatus {\n  DRAFT\n  IN_PROGRESS\n  REVIEW\n  APPROVED\n  IMPLEMENTED\n  CANCELLED\n  ON_HOLD\n}\n\nenum RequirementStatus {\n  DRAFT\n  REVIEW\n  APPROVED\n  REJECTED\n  IMPLEMENTED\n  OBSOLETE\n}\n\nenum FRDStatus {\n  DRAFT\n  REVIEW\n  APPROVED\n  DELIVERED\n  ARCHIVED\n}\n\nenum EntityType {\n  INPUT\n  SIGNAL // V2: Enhanced signal model\n  HOTSPOT // V2: Clustered signals\n  IDEA // V2: Ideas from hotspots\n  SOLUTION\n  REQUIREMENT\n  FRD_DOCUMENT\n}\n\nenum VoteValue {\n  UP\n  DOWN\n}\n\nenum NotificationType {\n  MENTION\n  VOTE\n  COMMENT\n  STATUS_CHANGE\n  APPROVAL_REQUEST\n  ASSIGNMENT\n  DEADLINE_REMINDER\n}\n\n// ============================================================================\n// V2 ENUMS (PHQ Vision Standard Compliant)\n// ============================================================================\n\nenum Severity {\n  LOW\n  MEDIUM\n  HIGH\n  CRITICAL\n}\n\nenum HotspotStatus {\n  OPEN\n  APPROVED\n  HANDED_OFF\n  MONITORING\n  RESOLVED\n  CLOSED_NO_ACTION\n}\n",
  "inlineSchemaHash": "aff3010602bc73752e45cff214919402562e0adee76111ebcc09cdf5b4c6b318",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"UserRole\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"avatar\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"passwordHash\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"inputs\",\"kind\":\"object\",\"type\":\"Input\",\"relationName\":\"InputToUser\"},{\"name\":\"signals\",\"kind\":\"object\",\"type\":\"Signal\",\"relationName\":\"SignalToUser\"},{\"name\":\"initiatives\",\"kind\":\"object\",\"type\":\"Initiative\",\"relationName\":\"InitiativeToUser\"},{\"name\":\"ideas\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToUser\"},{\"name\":\"solutions\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"SolutionToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"votes\",\"kind\":\"object\",\"type\":\"Vote\",\"relationName\":\"UserToVote\"},{\"name\":\"requirements\",\"kind\":\"object\",\"type\":\"Requirement\",\"relationName\":\"RequirementToUser\"},{\"name\":\"frdDocuments\",\"kind\":\"object\",\"type\":\"FRDDocument\",\"relationName\":\"FRDCreator\"},{\"name\":\"approvedFRDs\",\"kind\":\"object\",\"type\":\"FRDDocument\",\"relationName\":\"FRDApprover\"},{\"name\":\"auditLogs\",\"kind\":\"object\",\"type\":\"AuditLog\",\"relationName\":\"AuditLogToUser\"},{\"name\":\"inputGroups\",\"kind\":\"object\",\"type\":\"InputGroup\",\"relationName\":\"InputGroupToUser\"}],\"dbName\":\"users\"},\"Department\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teams\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"DepartmentToTeam\"},{\"name\":\"signals\",\"kind\":\"object\",\"type\":\"Signal\",\"relationName\":\"DepartmentToSignal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"departments\"},\"Team\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToTeam\"},{\"name\":\"signals\",\"kind\":\"object\",\"type\":\"Signal\",\"relationName\":\"SignalToTeam\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"teams\"},\"Initiative\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InitiativeToUser\"},{\"name\":\"goalJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"roiJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"solutions\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"InitiativeToSolution\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"initiatives\"},\"Category\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"categories\"},\"Signal\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"receivedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"schemaVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"attachmentsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"sourceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sourceId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"systemName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"severity\",\"kind\":\"enum\",\"type\":\"Severity\"},{\"name\":\"severityScore\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"departmentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"teamId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"department\",\"kind\":\"object\",\"type\":\"Department\",\"relationName\":\"DepartmentToSignal\"},{\"name\":\"team\",\"kind\":\"object\",\"type\":\"Team\",\"relationName\":\"SignalToTeam\"},{\"name\":\"metricsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"baselineJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"impactJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tagsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"entitiesJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"privacyLevel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dedupeKey\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"embedding\",\"kind\":\"scalar\",\"type\":\"Bytes\"},{\"name\":\"aiProcessed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"aiTagsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"lineageJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SignalToUser\"},{\"name\":\"hotspots\",\"kind\":\"object\",\"type\":\"HotspotSignal\",\"relationName\":\"HotspotSignalToSignal\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"signals\"},\"Hotspot\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"summary\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"HotspotStatus\"},{\"name\":\"rankScore\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"primaryCategoryId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedEntitiesJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"clusteringMethod\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"similarityThreshold\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"signals\",\"kind\":\"object\",\"type\":\"HotspotSignal\",\"relationName\":\"HotspotToHotspotSignal\"},{\"name\":\"ideas\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"HotspotToIdea\"},{\"name\":\"solutions\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"HotspotToSolution\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"hotspots\"},\"HotspotSignal\":{\"fields\":[{\"name\":\"hotspotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"signalId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"membershipStrength\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isOutlier\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hotspot\",\"kind\":\"object\",\"type\":\"Hotspot\",\"relationName\":\"HotspotToHotspotSignal\"},{\"name\":\"signal\",\"kind\":\"object\",\"type\":\"Signal\",\"relationName\":\"HotspotSignalToSignal\"}],\"dbName\":\"hotspot_signals\"},\"Idea\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"hotspotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"origin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"votes\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"evidenceJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"tagsJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"confidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdById\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"IdeaToUser\"},{\"name\":\"hotspot\",\"kind\":\"object\",\"type\":\"Hotspot\",\"relationName\":\"HotspotToIdea\"},{\"name\":\"solution\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"IdeaToSolution\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"ideas\"},\"Input\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"InputType\"},{\"name\":\"department\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"issueType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rootCause\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"aiTags\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aiSuggestions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"InputStatus\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InputToUser\"},{\"name\":\"solutions\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"InputToSolution\"},{\"name\":\"groups\",\"kind\":\"object\",\"type\":\"InputGroup\",\"relationName\":\"InputToInputGroup\"}],\"dbName\":\"inputs\"},\"Solution\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"SolutionStatus\"},{\"name\":\"hotspotId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"initiativeId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ideaId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tasks\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"progress\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"targetDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"actualCompletionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"estimatedEffort\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"businessValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"successMetrics\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"expectedImpactJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"actualImpactJson\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"inputId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"hotspot\",\"kind\":\"object\",\"type\":\"Hotspot\",\"relationName\":\"HotspotToSolution\"},{\"name\":\"initiative\",\"kind\":\"object\",\"type\":\"Initiative\",\"relationName\":\"InitiativeToSolution\"},{\"name\":\"idea\",\"kind\":\"object\",\"type\":\"Idea\",\"relationName\":\"IdeaToSolution\"},{\"name\":\"input\",\"kind\":\"object\",\"type\":\"Input\",\"relationName\":\"InputToSolution\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SolutionToUser\"},{\"name\":\"requirements\",\"kind\":\"object\",\"type\":\"Requirement\",\"relationName\":\"RequirementToSolution\"},{\"name\":\"frdDocuments\",\"kind\":\"object\",\"type\":\"FRDDocument\",\"relationName\":\"FRDDocumentToSolution\"}],\"dbName\":\"solutions\"},\"Requirement\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"acceptanceCriteria\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"priority\",\"kind\":\"enum\",\"type\":\"Priority\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"RequirementStatus\"},{\"name\":\"estimatedEffort\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dependencies\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"businessValue\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"riskAssessment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"stakeholders\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"rejectionReason\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"solutionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"solution\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"RequirementToSolution\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"RequirementToUser\"}],\"dbName\":\"requirements\"},\"FRDDocument\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"aiGenerated\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"aiConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aiPromptUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"version\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"FRDStatus\"},{\"name\":\"executiveApproved\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"exportFormats\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"templateUsed\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"generationTime\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"wordCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"lastExportedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"solutionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"approvedBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"solution\",\"kind\":\"object\",\"type\":\"Solution\",\"relationName\":\"FRDDocumentToSolution\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FRDCreator\"},{\"name\":\"approver\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FRDApprover\"}],\"dbName\":\"frd_documents\"},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"parentId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"thread\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentThread\"},{\"name\":\"replies\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentThread\"},{\"name\":\"mentions\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"edited\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"editedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"}],\"dbName\":\"comments\"},\"Vote\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"value\",\"kind\":\"enum\",\"type\":\"VoteValue\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToVote\"}],\"dbName\":\"votes\"},\"InputGroup\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"color\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"aiSuggested\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"aiConfidence\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"aiReasoning\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"inputCount\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"avgPriority\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"creator\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"InputGroupToUser\"},{\"name\":\"inputs\",\"kind\":\"object\",\"type\":\"Input\",\"relationName\":\"InputToInputGroup\"}],\"dbName\":\"input_groups\"},\"AuditLog\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"action\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"changes\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"AuditLogToUser\"}],\"dbName\":\"audit_logs\"},\"Notification\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"enum\",\"type\":\"NotificationType\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"entityType\",\"kind\":\"enum\",\"type\":\"EntityType\"},{\"name\":\"entityId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"read\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"readAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"delivered\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"notifications\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

