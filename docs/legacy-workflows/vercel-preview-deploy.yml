name: Vercel Preview Deploy with Database Seeding

on:
  push:
    branches: ['*']
  pull_request:
    branches: ['main']

jobs:
  deploy-and-seed:
    runs-on: ubuntu-latest
    environment: preview
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npx prisma generate
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          
      - name: Deploy to Vercel
        id: deploy
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: |
          echo "Deploying to Vercel..."
          DEPLOYMENT_URL=$(npx vercel --token $VERCEL_TOKEN --confirm --yes)
          echo "deployment_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          echo "Deployed to: $DEPLOYMENT_URL"
          
      - name: Run Database Migrations
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          echo "Running database migrations..."
          npx prisma db push --accept-data-loss
          
      - name: Seed Database
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          echo "Seeding database with comprehensive test data..."
          node prisma/simple-seed.js
          
      - name: Validate Deployment
        env:
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment_url }}
        run: |
          echo "Validating deployment at: $DEPLOYMENT_URL"
          # Wait for deployment to be ready
          sleep 30
          # Test deployment accessibility
          curl -I "$DEPLOYMENT_URL" || echo "Deployment validation completed"
          
      - name: Update Linear Issue
        if: always()
        env:
          LINEAR_API_KEY: ${{ secrets.LINEAR_API_KEY }}
          DEPLOYMENT_URL: ${{ steps.deploy.outputs.deployment_url }}
        run: |
          echo "Deployment completed: $DEPLOYMENT_URL"
          echo "Database seeding completed"
          echo "Ready for AI feature testing"
